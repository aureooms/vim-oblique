Include: setup.vader

# Basic search
# ==============================================================================

After:
  AssertEqual [3, 5], [line('.'), col('.')]
  AssertEqual 1, &hlsearch
  doautocmd CursorMoved
  AssertEqual 1, &hlsearch
Do (Highlight NOT cleared when cursor is not moved):
  /license\<cr>

After:
  AssertEqual [3, 6], [line('.'), col('.')]
  AssertEqual 1, &hlsearch
  doautocmd CursorMoved
  AssertEqual 0, &hlsearch
Do (Highlight cleared when cursor is moved):
  /license\<cr>l

After:
  AssertEqual 0, &hlsearch
Do (Highlight cleared when switched to insert mode):
  /license\<cr>i\<esc>

After:
  AssertEqual [9, 16], [line('.'), col('.')]
  AssertEqual 1, &hlsearch
  doautocmd CursorMoved
  AssertEqual 1, &hlsearch
Do (Highlight is restored on n):
  /license\<cr>ln

After:
Execute (g:oblique#clear_highlight set to 0):
  let g:oblique#clear_highlight = 0
  " To clear lingering autocmd
  doautocmd CursorMoved

After:
  AssertEqual 1, &hlsearch
Do (Highlight not cleared even when switched to insert mode):
  /license\<cr>i\<esc>

After:
Execute (Unlet g:oblique#clear_highlight):
  unlet g:oblique#clear_highlight

After:
  AssertEqual 8, line('.')
  doautocmd CursorMoved
  AssertEqual 1, &hlsearch
Do (n and N on forward search):
  /copy\<cr>
  nnnN
Do (n and N on backward search):
  G
  ?copy\<cr>
  nnnN

After:
Do (/ with command):
  5G
  d/dealings\<cr>

Expect:
  Copyright (c) 2014 Junegunn Choi

  MIT License

  DEALINGS IN THE SOFTWARE.

# Very magic
# ==============================================================================
After:
  AssertEqual [1, 1], [line('.'), col('.')]
Do (/.):
  /.\<cr>

After:
  AssertEqual [14, 63], [line('.'), col('.')]
Do (/\V.):
  /\V.\<cr>

After:
Execute (Set g:oblique#very_magic):
  let g:oblique#very_magic = 1

After:
  AssertEqual [14, 63], [line('.'), col('.')]
Do (\V is automatically prepended to .):
  /.\<cr>

After:
  AssertEqual [1, 1], [line('.'), col('.')]
Do (Delete prepended \V):
  /\<c-u>.\<cr>

After:
Execute (Unlet g:oblique#very_magic):
  unlet g:oblique#very_magic

# Star-search
# ==============================================================================
After:
  AssertEqual '\V\<License\>', histget('/', -1)
  AssertEqual [3, 5], [line('.'), col('.')]
  AssertEqual 1, &hlsearch
Do (*-search):
  jjw*

After:
  AssertEqual [3, 5], [line('.'), col('.')]
  AssertEqual 1, &hlsearch
Do (*-search and n: no more match):
  jjw*n

After:
  AssertEqual [3, 6], [line('.'), col('.')]
  doautocmd CursorMoved
  AssertEqual 0, &hlsearch
Do (*-search and move cursor to clear highlight):
  jjw*l

After:
  AssertEqual '\Vlicense', histget('/', -1)
  AssertEqual [9, 16], [line('.'), col('.')]
Do (#-search in visual mode):
  9Gfl
  ve#

After:
  AssertEqual [3, 5], [line('.'), col('.')]
Do (#-search in visual mode then n):
  9Gfl
  ve#n

After:
Do (*-search around a paragraph in visual mode):
  5Gvap*
  dgn

Expect:
  Copyright (c) 2014 Junegunn Choi

  MIT License

  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Fuzzy-search
# ==============================================================================

After:
  AssertEqual [13, 11], [line('.'), col('.')]
  AssertEqual 'Copyright (c) 2014 Junegunn C', @a
  AssertEqual 'copy of this software and associated doc', @b
  AssertEqual 'copyright notice and this permission notic', @c
Do (<Leader>/ to fuzzy-search):
  \<Space>/ccc\<cr>
  gn"ay
  nnNgn"by
  ngn"cy

After:
  AssertEqual [6, 3], [line('.'), col('.')]
  AssertEqual 'CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN C', @a
  AssertEqual 'copyright notice and this permission notic', @b
  AssertEqual 'copy of this software and associated doc', @c
Do (<Leader>? to backward-fuzzy-search):
  G
  \<Space>?ccc\<cr>
  gn"ay
  nnNgn"by
  ngn"cy

# Regression
# ==============================================================================

After:
  AssertEqual [1, 5], [line('.'), col('.')]
Do (Invalid regular expression should not throw exception):
  /\?\<bs>\<bs>right\<cr>

After:
Execute (n should not raise error when no match is found):
  execute "normal /xxxyyyzzz\<cr>n"

After:
Execute (N also should not raise error when no match is found):
  execute "normal /xxxyyyzzz\<cr>N"

After:
Execute (n should not raise error in visual mode when no match is found):
  execute "normal v/xxxyyyzzz\<cr>N"

# Cleanup
# ==============================================================================
Before:
After:
Execute (Cleanup):
  set nohlsearch

